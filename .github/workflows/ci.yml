name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  VERSION: ""
  IMAGE_NAME: "my-fastapi-app"

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python and toml
        run: |
          pip install toml

      - name: Set VERSION
        id: set-version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=VERSION::$VERSION"
  

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t my-fastapi-app:$VERSION .

      - name: Save Docker image to file
        run: docker save $IMAGE_NAME:$VERSION -o $IMAGE_NAME_$VERSION.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: dokcer-image-artifact
          path: $IMAGE_NAME_*.tar

  code-quality:
    needs: [build]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
        - name: Download Docker image artifact
          uses: actions/download-artifact@v3
          with:
            name: $IMAGE_NAME
            path: .

        - name: Load Docker image from file
          run: |
                IMAGE_FILE=$(ls $IMAGE_NAME_*.tar)
                docker load -i $IMAGE_FILE


        - name: Code Quality Check
          run: docker run --rm $IMAGE_NAME:$VERSION bash -c "pip install pre-commit && pre-commit run --all-files"

  test:
    needs: [build]
    timeout-minutes: 15
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.3-alpine3.19
        env:
          POSTGRES_USER: POSTGRES_USER
          POSTGRES_PASSWORD: POSTGRES_PASSWORD
          POSTGRES_DB: POSTGRES_DB
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Use Docker image from build stage
        run: |
          pip install toml
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          docker pull my-fastapi-app:$VERSION 

      - name: Run tests
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          docker run --rm my-fastapi-app:$VERSION pytest
